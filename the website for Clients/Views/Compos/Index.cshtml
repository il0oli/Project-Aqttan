@* @model IEnumerable<ClientAqttan.Models.Compo>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Image)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
 *@
@*  @model IEnumerable<ClientAqttan.Models.Compo>

@{
    ViewData["Title"] = "Components";
}

<div class="container mt-5">
    <h1 class="text-center">Components</h1>
    <table class="table table-striped table-bordered mt-4">
        <thead class="thead-dark">
            <tr>
                <th scope="col">رقم المكون</th>
                <th scope="col">الأسم</th>
                <th scope="col">عدد الأصناف المكونه منه</th>
                <th scope="col">الصورة</th>
                <th scope="col">الأحداث</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.ItemAmount)</td>
                    <td>
                        <img src="data:image;base64,@Convert.ToBase64String(item.Image)" alt="Component Image" class="img-thumbnail" style="width: 100px; height: 100px;" />
                    </td>
                    <td>
                        <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-warning btn-sm">Edit</a>
                        <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this component?');">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div> *@

@* @model IEnumerable<Compo>

@{
    ViewData["Title"] = "Components ";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Components</h1>
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <img src="data:image;base64,@Convert.ToBase64String(item.Image)" class="card-img-top" alt="Component Image" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <div class="flex">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        <p class="card-text">ID: @Html.DisplayFor(modelItem => item.Id)</p>
                        <p class="card-text">Number of Items: @Html.DisplayFor(modelItem => item.ItemAmount)</p>
                        <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-warning">Edit</a>
                        <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this component?');">Delete</a>
                    </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div> *@

@*                         @model IEnumerable<Compo>

@{
    ViewData["Title"] = "Components";
}


<p>
    <a asp-action="Create">Add New</a>
</p>
<div class="container mt-5">
    <h1 class="text-center mb-4">Components List</h1>
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card shadow-sm border-light">
                    <img src="data:image;base64,@Convert.ToBase64String(item.Image)" class="card-img-top" alt="Component Image" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        <p class="card-text">ID: @Html.DisplayFor(modelItem => item.Id)</p>
                        <p class="card-text">Number of Items: @Html.DisplayFor(modelItem => item.ItemAmount)</p>
                        <div class="d-flex justify-content-between">
                            
                            <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-warning btn-sm">Edit</a>
                            <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this component?');">Delete</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<style>
    .card {
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .card-img-top {
        border-bottom: 1px solid #ddd;
    }

    .card-body {
        padding: 1.25rem;
    }
</style> *@

                           @*  @model IEnumerable<Compo>

@{
    ViewData["Title"] = "Component Page";
    Layout = "~/Views/Shared/_Layout.cshtml"; // تعديل مسار الـ Layout وفقاً لمشروعك
}

<div class="container">
    <div class="header">
        <h2>Component Page</h2>
        <a href="@Url.Action("Create", "Compos")" class="btn btn-success">ADD NEW COMPONENT</a>
    </div>

    <div class="row">
        @foreach (var compo in Model)
        {
            <div class="col-md-4 col-sm-6">
                <div class="card">
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(compo.Image)" class="card-img-top" alt="Component Image">
                    <div class="card-body">
                        <h5 class="card-title">@compo.Name</h5>
                        <p class="card-text">ID @compo.Id</p>
                        <p class="card-text">@compo.ItemAmount items made of it</p>
                        <a href="@Url.Action("Edit", "Compos", new { id = compo.Id })" class="btn btn-warning">EDIT</a>
                        <a href="@Url.Action("Delete", "Compos", new { id = compo.Id })" class="btn btn-danger">DELETE</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .container {
        margin-top: 20px;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .card {
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        transition: 0.3s;
        width: 100%;
        max-width: 300px;
        overflow: hidden;
    }

        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

    .card-img-top {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .card-body {
        padding: 15px;
    }

    .card-title {
        font-size: 18px;
        font-weight: bold;
    }

    .card-text {
        margin-bottom: 10px;
    }

    .btn {
        margin-top: 10px;
    }

    .btn-warning {
        background-color: #ffc107;
        color: white;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }
</style> *@

    @model IEnumerable<Compo>

@{
    ViewData["Title"] = "Components Page";
    Layout = null; // تعيين Layout إلى null لإنشاء تخطيط مخصص
}

<div class="dashboard-container">
    <!-- Sidebar -->
    <div class="sidebar">
        <h2>AQTTan Dashboard</h2>
        <ul class="sidebar-menu">
            <li><a class="navbar-brand" asp-controller="Home" asp-action="Index">Home</a></li>
            <li><a class="nav-link text-dark" asp-controller="Compos" asp-action="Index">Components</a></li>
            <li><a class="nav-link text-dark" asp-controller="Items" asp-action="Index">Your Items</a></li>
        </ul>
        <ul class="sidebar-bottom">
            <li><a asp-controller="Account" asp-action="Index">Account</a></li>
            <li id="end"><a class="nav-link text-dark" asp-controller="Home" asp-action="Privacy">Privacy Policy</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <div class="header">
                <h2>Components Page</h2>
                <a href="@Url.Action("Create", "Compos")" class="btn btn-success">ADD NEW COMPONENT</a>
            </div>



            <div class="row">
                @foreach (var compo in Model)
                {
                    <div class=" col-md-6 col-lg-4 mb-4">
                        <div class="card h-100 d-flex flex-row">
                            <div class="img-container">
                            @if (compo.Image != null)
                            {
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(compo.Image)" class="card-img" alt="Component Image">
                            }
                            </div>
                            <div class="card-body d-flex flex-column justify-content-between">
                                <h5 class="card-title">@compo.Name</h5>
                                <p class="card-text">ID @compo.Id</p>
                                <p class="card-text">@compo.ItemAmount items made of it</p>
                                <a href="@Url.Action("ItemsByComponent", "Items", new { componentId = compo.Id })" class="btn btn-primary">VIEW ITEMS</a>
                                <a href="@Url.Action("Edit", "Compos", new { id = compo.Id })" class="btn btn-warning">EDIT</a>
                                <a href="@Url.Action("Delete", "Compos", new { id = compo.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this component?');">DELETE</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f5f5f5;
        
    }

    .dashboard-container {
        display: flex;
    }

    .sidebar {
        width: 130px;
        background-color: #6E2424; /* اللون البني */
        color: #fff;
        height: 100vh;
        padding: 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* لضمان توزيع العناصر بشكل مناسب */
        position: fixed;
        border-radius: 0px 15px 0px 0px; /* نصف القطر للزوايا المحددة */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

        .sidebar h2 {
            text-align: center;
            font-size: 20px;
            margin-bottom: 10px;
        }

    .sidebar-menu {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

        .sidebar-menu li {
            margin-bottom: 20px;
        }

            .sidebar-menu li a {
                color: #fff;
                text-decoration: none;
                font-size: 14px;
                display: block;
                padding: 10px;
                border-radius: 5px;
                transition: background 0.3s;
            }

                .sidebar-menu li a:hover {
                    background-color: #3e241f; /* لون أغمق عند التمرير */
                    
                }

    .sidebar-bottom {
        list-style-type: none;
        padding: 0;
        margin: 0,0,0,50px;
    }

        

        .sidebar-bottom li {
           
            margin-bottom: 20px;
        }

        
        
            .sidebar-bottom li a {
                color: #fff;
                text-decoration: none;
                font-size: 14px;
                display: block;
                padding: 10px;
                border-radius: 5px;
                transition: background 0.3s;
            }

                .sidebar-bottom li a:hover {
                    background-color: #3e241f; /* لون أغمق عند التمرير */
                    
                }


    .main-content {
        margin-left: 170px; /* المسافة من اليسار لتفادي التداخل مع الـ sidebar */
        padding: 100px;
        width: calc(100% - 100px);

    }

    .container {
        margin-top: 10px;
        padding: 10px;
        
        }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .card {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        overflow: hidden;
        max-width: 550px;
        max-height: 100%;
        transition: 0.3s;
    }

    .card-img {
        width: 150px;
        height: 100%;
        object-fit: cover;
    }

    .card-body {
        padding: 15px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-title {
        font-size: 18px;
        font-weight: bold;
    }

    .card-text {
        margin-bottom: 10px;
    }

    /* الأنماط الأساسية للأزرار */
    .btn {
        margin-top: 10px;
        padding: 8px 8px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 12px;
        color: white;
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align:center;
    }

    /* زر التحذير (التعديل) */
    .btn-warning {
        background: linear-gradient(135deg, #ff9900, #FAB05A);
    }

        .btn-warning:hover {
            background: linear-gradient(135deg, #ffb84d, #ff8533);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    /* زر الحذف */
    .btn-danger {
        background: linear-gradient(135deg, #ff4d4d, #FA5A5A);
    }

   

        .btn-danger:hover {
            background: linear-gradient(135deg, #ff6666, #ff3333);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    .btn-primary {
        background: linear-gradient(45deg, #00BFFF, #1E90FF)
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #1e90fe, #00bff5);
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
        transform: translateY(-2px);
    }

    /* زر النجاح (إضافة/موافقة) */
    .btn-success {
        background: linear-gradient(135deg, #28a745, #218838);
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #4cd964, #3dbf58);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    /* إزالة الخطوط تحت النص */
    .btn:hover {
        text-decoration: none;
    }

</style>